/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LightsoutIndexRouteImport } from './routes/lightsout/index'
import { Route as IceIndexRouteImport } from './routes/ice/index'
import { Route as IcecopyIndexRouteImport } from './routes/ice copy/index'
import { Route as FilloutIndexRouteImport } from './routes/fillout/index'
import { Route as PlayLightsoutIndexRouteImport } from './routes/play/lightsout/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LightsoutIndexRoute = LightsoutIndexRouteImport.update({
  id: '/lightsout/',
  path: '/lightsout/',
  getParentRoute: () => rootRouteImport,
} as any)
const IceIndexRoute = IceIndexRouteImport.update({
  id: '/ice/',
  path: '/ice/',
  getParentRoute: () => rootRouteImport,
} as any)
const IcecopyIndexRoute = IcecopyIndexRouteImport.update({
  id: '/ice copy/',
  path: '/ice copy/',
  getParentRoute: () => rootRouteImport,
} as any)
const FilloutIndexRoute = FilloutIndexRouteImport.update({
  id: '/fillout/',
  path: '/fillout/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayLightsoutIndexRoute = PlayLightsoutIndexRouteImport.update({
  id: '/play/lightsout/',
  path: '/play/lightsout/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fillout': typeof FilloutIndexRoute
  '/ice copy': typeof IcecopyIndexRoute
  '/ice': typeof IceIndexRoute
  '/lightsout': typeof LightsoutIndexRoute
  '/play/lightsout': typeof PlayLightsoutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fillout': typeof FilloutIndexRoute
  '/ice copy': typeof IcecopyIndexRoute
  '/ice': typeof IceIndexRoute
  '/lightsout': typeof LightsoutIndexRoute
  '/play/lightsout': typeof PlayLightsoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/fillout/': typeof FilloutIndexRoute
  '/ice copy/': typeof IcecopyIndexRoute
  '/ice/': typeof IceIndexRoute
  '/lightsout/': typeof LightsoutIndexRoute
  '/play/lightsout/': typeof PlayLightsoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/fillout'
    | '/ice copy'
    | '/ice'
    | '/lightsout'
    | '/play/lightsout'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/fillout' | '/ice copy' | '/ice' | '/lightsout' | '/play/lightsout'
  id:
    | '__root__'
    | '/'
    | '/fillout/'
    | '/ice copy/'
    | '/ice/'
    | '/lightsout/'
    | '/play/lightsout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FilloutIndexRoute: typeof FilloutIndexRoute
  IcecopyIndexRoute: typeof IcecopyIndexRoute
  IceIndexRoute: typeof IceIndexRoute
  LightsoutIndexRoute: typeof LightsoutIndexRoute
  PlayLightsoutIndexRoute: typeof PlayLightsoutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lightsout/': {
      id: '/lightsout/'
      path: '/lightsout'
      fullPath: '/lightsout'
      preLoaderRoute: typeof LightsoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ice/': {
      id: '/ice/'
      path: '/ice'
      fullPath: '/ice'
      preLoaderRoute: typeof IceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ice copy/': {
      id: '/ice copy/'
      path: '/ice copy'
      fullPath: '/ice copy'
      preLoaderRoute: typeof IcecopyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fillout/': {
      id: '/fillout/'
      path: '/fillout'
      fullPath: '/fillout'
      preLoaderRoute: typeof FilloutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play/lightsout/': {
      id: '/play/lightsout/'
      path: '/play/lightsout'
      fullPath: '/play/lightsout'
      preLoaderRoute: typeof PlayLightsoutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FilloutIndexRoute: FilloutIndexRoute,
  IcecopyIndexRoute: IcecopyIndexRoute,
  IceIndexRoute: IceIndexRoute,
  LightsoutIndexRoute: LightsoutIndexRoute,
  PlayLightsoutIndexRoute: PlayLightsoutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
